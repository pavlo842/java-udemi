package lesson2;

public class PrimitiveDataTypes {
    public static void main(String[] args) {

        // Тип данных byte - размер от -128 до 127 бит
        byte b1 = 10;
        byte b2 = 20;
        byte b3 = 100;

        // Тип данных short
        short s1 = 5;
        short s2 = -10;
        short s3 = 0;

        // Тип данных int
        int i1 = 500;

        // Тип данных long
        long l1 = 1000;
        long l2 = 10000000000L; // Чтобы использовать данный тип
                                // то на конце надо ставить L или l(не рекомендуется)
        long l3 = 51L;

        // Тип данных float // Чтобы использовать данный тип то
        // на конце надо ставить F или f(не рекомендуется)
        float f1 = 3.14F;
        float f2 = 2.5f;
        float f3 = 20; // не ругается т.к. 20 int относиться (входит в диапазон) к float

        // Тип данных double
        double d1 = 3.14;
        double d2 = 2.5;

        // Тип данных char - только один символ и не важно какой - ТОЛЬКО ОДИН и только в одинарных ковычках
        char ch1 = 'c';
        char ch2 = 'C';
        char ch3 = '7';
        char ch4 = ' '; // пробел тоже символ
        char ch5 = 'Ъ';
        char ch6 = 500; // 500-е значение таблицы unicode - 10-ричная система счисления
        char ch7 = '\u0500'; // порядковый номер символа из unicode - 16-ричная система счисления

        // Тип данных boolean
        boolean bool1 = true;
        boolean boopl2 = false;

        // Системы счисления
        int a1 = 60;
        int a2 = 0B111100; // вывод в двоичной системе счисления вместо 60 будет 0B111100 или 0b111100 (0B далее цифры)
        int a3 = 074; // вывод в 8-ричной системе счисления вместо 60 будет 074 (0 далее цифры)
        int a4 = 0x3c; // вывод в 16-ричной системе счисления вместо 60 будет 0x3c (0x далее символы)

        // Символ UNDERSCORE (нижнее подчеркивание) - деление на части для удобства чтения.
        // Можно использовать после нуля в 8-ричной системе счисления
        // НЕЛЬЗЯ ИСПОЛЬЗОВАТЬ:
        // 1. в начале и конце числа;
        // 2. до и после точки в дробных числах;
        // 3. до и после букв D,L,F,d,l,f;
        // 4. до, после и между 0X, 0x, 0B, 0b;

        int a7 = 1_000_000;

        System.out.println(f2); // 2.5
        System.out.println(ch7);
        System.out.println(a7);

    }
}
